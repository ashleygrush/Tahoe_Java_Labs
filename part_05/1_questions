Answer the following:

1) What are the access control modifiers (acm) provided in Java?
    public
    private
    protected

2) Briefly explain each acm and how they differentiate from each other?
    public - open to any class/package
    private - visible to class only.
    protected - only open to the package

3) Why do we use acm's?
    To lock up certain parts of code that we want to remain the same.

4) What is the risk of not using acm's?
    Certain things will have limited to no access.

5) Write a method signature that receives an object of type "Car" as a parameter.
    


6) Write a method signature that returns an object of type "Car".

7) What is a very important consideration to keep in mind when passing objects (hint: by reference) from one
method to another?

8) What is method overloading?
    two or more methods within the same class can share the same name as long as their parameter declarations are different.

9) Why is method overloading useful? (Hint: as compared to the implementation in the C language.)
    to compare different parameter types for different results; 10 vs. 10.5.

10) How do you overload a method? What signifies that a method is being overloaded?
    By using the same method name with different parameters.

11) Below, by writing just the method signature, demonstrate overloading a method 3 times.
    void overloadDemo1 (int a, int b);
    void overloadDemo2 (double a, double b);
    void overloadDemo 3 (long a, long b);

12) How do you overload a constructor? What signifies that a constructor is being overloaded?
    same as a method overloading.

13) Why do we overload constructors?
    to construct objects in a variety of ways.

14) Below, by writing just the constructor signature, demonstrate overloading a constructor 3 times.
    ClassName (int a, int b)
    ClassName (double a, double b)
    ClassName (long a, long b)

15) What is recursion?
    is a method that calls to itself to solve problems.
16) What important considerations must you keep in mind when using recursion?

17) How do you make a method recursive?
    private static long factorial(int n){
        if ( n <= 1)
            return 1;
        else
            return n*factorial(n*1)

18) How do you escape a recursive method?
    return.

19) Explain what "static" is all about?


20) When should you use "static"?

21) What differentiates static variables from instance variables?

22) What is a the quicksort? Briefly describe how the quicksort works.

23) What is a nested, or inner, class?

24) What is the scope of a nested class?

25) What is a variable-arity method?

26) What makes a variable-arity method unique? When should you use it?

27) What is the shorthand name for variable-arity?

28) Why important considerations must you keep in mind when using variable-arity methods? (hint: ambiguity)